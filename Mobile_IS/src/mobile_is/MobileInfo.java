/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mobile_is;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.util.Scanner;
/**
 *
 * @author ASUS
 */
public class MobileInfo extends javax.swing.JFrame {
    private ArrayList<MobileDetails> list = new ArrayList();
    private String modelNumber;
    private String mobileName;
    private String category;
    private String memory;
    private String processor;
    private int price;
    private String colour;            

    /**
     * Creates new form MobileInfo
     */
    public MobileInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        containerPanel = new javax.swing.JPanel();
        tablePanel = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        inputFormPanel = new javax.swing.JPanel();
        modelNumberTextField = new javax.swing.JTextField();
        modelNumberLabel = new javax.swing.JLabel();
        mobileNameLabel = new javax.swing.JLabel();
        mobileNameTextField = new javax.swing.JTextField();
        categoryComboBox = new javax.swing.JComboBox<>();
        categoryLabel = new javax.swing.JLabel();
        memoryLabel = new javax.swing.JLabel();
        fourGBRadioButton = new javax.swing.JRadioButton();
        eightGBRadioButton = new javax.swing.JRadioButton();
        sixteenGBRadioButton = new javax.swing.JRadioButton();
        processorLabel = new javax.swing.JLabel();
        processorTextField = new javax.swing.JTextField();
        colourLabel = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        priceLabel = new javax.swing.JLabel();
        colourComboBox = new javax.swing.JComboBox<>();
        formButtonPanel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        searchByPriceTextField = new javax.swing.JTextField();
        searchByPriceButton = new javax.swing.JButton();
        searchByCategoryButton = new javax.swing.JButton();
        searchByCategoryComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        closeMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpFileMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        containerPanel.setBackground(new java.awt.Color(204, 204, 255));

        tablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Mobile Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(0, 102, 102))); // NOI18N
        tablePanel.setForeground(new java.awt.Color(204, 255, 204));

        tableScrollPane.setBackground(new java.awt.Color(204, 255, 204));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Model_no", "Category", "Mobile Name", "Colour", "Processor", "Memory", "Price"
            }
        ));
        table.setShowGrid(true);
        tableScrollPane.setViewportView(table);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 903, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
        );

        inputFormPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Input Form", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(0, 102, 102))); // NOI18N

        modelNumberTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        modelNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelNumberTextFieldActionPerformed(evt);
            }
        });

        modelNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        modelNumberLabel.setText("Model Number");

        mobileNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobileNameLabel.setText("Mobile Name");

        mobileNameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobileNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNameTextFieldActionPerformed(evt);
            }
        });

        categoryComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Apple", "Samsung", "LG", "Sony", "Xiaomi" }));
        categoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBoxActionPerformed(evt);
            }
        });

        categoryLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        categoryLabel.setText("Category");

        memoryLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        memoryLabel.setText("Memory");

        fourGBRadioButton.setBackground(new java.awt.Color(204, 204, 255));
        buttonGroup1.add(fourGBRadioButton);
        fourGBRadioButton.setText("4 GB");
        fourGBRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourGBRadioButtonActionPerformed(evt);
            }
        });

        eightGBRadioButton.setBackground(new java.awt.Color(204, 204, 255));
        buttonGroup1.add(eightGBRadioButton);
        eightGBRadioButton.setText("8 GB");
        eightGBRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightGBRadioButtonActionPerformed(evt);
            }
        });

        sixteenGBRadioButton.setBackground(new java.awt.Color(204, 204, 255));
        buttonGroup1.add(sixteenGBRadioButton);
        sixteenGBRadioButton.setText("16 GB");
        sixteenGBRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixteenGBRadioButtonActionPerformed(evt);
            }
        });

        processorLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        processorLabel.setText("Processor");

        processorTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        colourLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        colourLabel.setText("Colour");

        priceTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        priceLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        priceLabel.setText("Price");

        colourComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        colourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Black", "Red", "Silver", "Blue", "Gold", "Grey", "Yellow" }));

        javax.swing.GroupLayout inputFormPanelLayout = new javax.swing.GroupLayout(inputFormPanel);
        inputFormPanel.setLayout(inputFormPanelLayout);
        inputFormPanelLayout.setHorizontalGroup(
            inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputFormPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputFormPanelLayout.createSequentialGroup()
                        .addComponent(colourLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(colourComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputFormPanelLayout.createSequentialGroup()
                        .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modelNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(memoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputFormPanelLayout.createSequentialGroup()
                                .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(inputFormPanelLayout.createSequentialGroup()
                                        .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(modelNumberTextField)
                                            .addComponent(categoryComboBox, 0, 143, Short.MAX_VALUE))
                                        .addGap(48, 48, 48)
                                        .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mobileNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(processorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(16, 16, 16))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputFormPanelLayout.createSequentialGroup()
                                        .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)))
                                .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mobileNameTextField)
                                    .addComponent(processorTextField)
                                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(inputFormPanelLayout.createSequentialGroup()
                                .addComponent(fourGBRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(eightGBRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sixteenGBRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        inputFormPanelLayout.setVerticalGroup(
            inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputFormPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processorLabel)
                    .addComponent(processorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fourGBRadioButton)
                    .addComponent(eightGBRadioButton)
                    .addComponent(sixteenGBRadioButton))
                .addGap(18, 18, 18)
                .addGroup(inputFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colourLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colourComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        formButtonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buttons", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(0, 102, 102))); // NOI18N

        addButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearButton.setText("CLEAR");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        exitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formButtonPanelLayout = new javax.swing.GroupLayout(formButtonPanel);
        formButtonPanel.setLayout(formButtonPanelLayout);
        formButtonPanelLayout.setHorizontalGroup(
            formButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formButtonPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(formButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(formButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        formButtonPanelLayout.setVerticalGroup(
            formButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formButtonPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(formButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(formButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchPanel.setForeground(new java.awt.Color(240, 240, 240));

        searchByPriceTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchByPriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByPriceTextFieldActionPerformed(evt);
            }
        });

        searchByPriceButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchByPriceButton.setText("Search  by Price");
        searchByPriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByPriceButtonActionPerformed(evt);
            }
        });

        searchByCategoryButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchByCategoryButton.setText("Search by Category");
        searchByCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByCategoryButtonActionPerformed(evt);
            }
        });

        searchByCategoryComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchByCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Apple", "Samsung", "LG", "Sony", "Xiaomi" }));

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchByCategoryComboBox, 0, 130, Short.MAX_VALUE)
                    .addComponent(searchByPriceTextField))
                .addGap(27, 27, 27)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchByPriceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchByCategoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchByPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByPriceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchByCategoryButton)
                    .addComponent(searchByCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Imprint MT Shadow", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("SBS ONLINE");

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(224, 224, 224)
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(containerPanelLayout.createSequentialGroup()
                            .addComponent(inputFormPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(formButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputFormPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(formButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );

        fileMenu.setText("File");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);
        fileMenu.add(jSeparator1);

        closeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");

        helpFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        helpFileMenuItem.setText("Help File");
        helpFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpFileMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpFileMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modelNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelNumberTextFieldActionPerformed

    private void mobileNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNameTextFieldActionPerformed

    private void categoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryComboBoxActionPerformed

    private void fourGBRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourGBRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fourGBRadioButtonActionPerformed

    private void eightGBRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightGBRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eightGBRadioButtonActionPerformed

    private void sixteenGBRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixteenGBRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sixteenGBRadioButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        try {
            modelNumber = modelNumberTextField.getText().trim();
            mobileName = mobileNameTextField.getText().trim();
            category = categoryComboBox.getSelectedItem().toString().trim();
            processor = processorTextField.getText().trim();
            colour = colourComboBox.getSelectedItem().toString().trim();
            
            if((modelNumber.isEmpty() || mobileName.isEmpty() || processor.isEmpty())) {
                JOptionPane.showMessageDialog(rootPane, "Please enter details in all text fieds!", " Invalid", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(categoryComboBox.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(rootPane, "Please select a category!","Error",2);
                return;
            }
            
            else if (colourComboBox.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(rootPane, "Please select a colour!","Error",2);
                return;
            }
            
            if (fourGBRadioButton.isSelected()) {
                memory = fourGBRadioButton.getText().trim();
            }
            else if(eightGBRadioButton.isSelected()) {
                memory = eightGBRadioButton.getText().trim();
            }
            else if(sixteenGBRadioButton.isSelected()) {
                memory = sixteenGBRadioButton.getText().trim();
            }
            else {
                JOptionPane.showMessageDialog(rootPane,"Please provide value for the memory","Alert",JOptionPane.WARNING_MESSAGE); 
                return;
            }
            price = Integer.parseInt(priceTextField.getText().trim());
            
            if(price<=0){
                JOptionPane.showMessageDialog(rootPane, "Price cannot be negative or zero", " Invalid", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            MobileDetails mobileDetails = new MobileDetails(modelNumber, mobileName, category, processor, memory, colour, price);
            if(isDuplicateRow(mobileDetails)) {
                JOptionPane.showMessageDialog(rootPane, "The mobile with the given model number already exists", " Invalid", JOptionPane.ERROR_MESSAGE);
                return;
            }
            list.add(mobileDetails);

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.addRow(new Object[] { modelNumber, category.trim(), mobileName, colour, processor, memory, price});
    //        (String modelNumber, String name, String category, String processor, String memory, String colour, int price)
        }
        catch(NumberFormatException exception){
            JOptionPane.showMessageDialog(rootPane, "Please enter number value in price field!","Invalid Information",JOptionPane.ERROR_MESSAGE);
        } 
              
    }//GEN-LAST:event_addButtonActionPerformed

    private boolean isDuplicateRow(MobileDetails details) {
        if(list.isEmpty()) {
            return false;
        }
        String model = details.getModelNumber();
        for (MobileDetails detail : list) { 		      
           if(detail.getModelNumber().equalsIgnoreCase(model)) {
               return true;
           }	
        }
        
        return false;
    }
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            int selectedRowIndex = table.getSelectedRow();
            if(model.getRowCount()==0){
                JOptionPane.showMessageDialog(rootPane,"No rows found for deletion","ERROR!",JOptionPane.ERROR_MESSAGE);
            }
            else if(selectedRowIndex == -1){
                JOptionPane.showMessageDialog(rootPane,"Please select a row to delete","ERROR!",JOptionPane.ERROR_MESSAGE);
            }
            else{
                model.removeRow(selectedRowIndex);
                list.remove(selectedRowIndex);
             }
         } 
         catch(Exception e)
         {
             JOptionPane.showMessageDialog(rootPane,"Row deleted successfully","Message!",JOptionPane.INFORMATION_MESSAGE);
         }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        modelNumberTextField.setText("");
        processorTextField.setText("");
        mobileNameTextField.setText("");
        priceTextField.setText("");
        categoryComboBox.setSelectedIndex(0);
        colourComboBox.setSelectedIndex(0);
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure, you want to close application?","EXIT",JOptionPane.YES_NO_OPTION);
        if(confirmed == JOptionPane.YES_OPTION)        {
            dispose();
        }
    }//GEN-LAST:event_exitButtonActionPerformed

    private void searchByPriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByPriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchByPriceTextFieldActionPerformed

    private void searchByPriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByPriceButtonActionPerformed
        // TODO add your handling code here:
        if(searchByPriceTextField.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane,"Please insert price in the text field to search.","Search Error",JOptionPane.INFORMATION_MESSAGE);
        return;
        }
        else if(list.isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"There are no items found for searching!","Search Error",JOptionPane.INFORMATION_MESSAGE);
            return;
        } 
        try {
            ArrayList<MobileDetails> toSortAndSearchList = new ArrayList<>();
            for(MobileDetails detail : list) {
                toSortAndSearchList.add(detail.copyMobileDetails());
            }
            sort(toSortAndSearchList); //sorting list by sort method
            int toSearchPrice = 
            Integer.parseInt(searchByPriceTextField.getText().trim()); 
            int index = binarySearch(toSortAndSearchList,0,toSortAndSearchList.size()-1,toSearchPrice); 
            if(index==-1)
            {
            JOptionPane.showMessageDialog(rootPane,"Mobile of price "+toSearchPrice+" is not found.","Warning",JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
            JOptionPane.showMessageDialog(rootPane,"The Model Number is "
                    +toSortAndSearchList.get(index).getModelNumber()+",\n"
            + "The mobile name is "+
                    toSortAndSearchList.get(index).getName()+",\n"
            + "The Category is "+toSortAndSearchList.get(index).getCategory()+",\n"
             + "The Colour is "+toSortAndSearchList.get(index).getColour()+",\n"
            + "The Processor is "+toSortAndSearchList.get(index).getProcessor()+",\n"
            + "The Memory is "+toSortAndSearchList.get(index).getMemory()+",\n"
            + "The Price is " 
                    +toSearchPrice +" \n","Mobile Found",JOptionPane.INFORMATION_MESSAGE);
             searchByPriceTextField.setText("");
            }
            
            toSortAndSearchList.clear();
        }
        catch(NumberFormatException nfe)
        {
        JOptionPane.showMessageDialog(rootPane,"Please input price in number in the text field.","Error",JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_searchByPriceButtonActionPerformed

    public void sort(ArrayList<MobileDetails> mobiles) {
        MobileDetails temp;
        boolean sorted = false;

        while (!sorted) {
            sorted = true;
            for (int i = 0; i < mobiles.size()-1; i++) {
                if (mobiles.get(i).compareTo(mobiles.get(i + 1)) > 0) {
                    temp = mobiles.get(i);
                    mobiles.set(i, mobiles.get(i + 1));
                    mobiles.set(i + 1, temp);
                    sorted = false;
                }
            }
        }
    }
    
     private int binarySearch(ArrayList<MobileDetails> list, int start, int end, int value){
        if(start<=end){
            int mid = (end + start)/2;
            if(list.get(mid).getPrice()== value){
            return mid;
        }
        else if(list.get(mid).getPrice()< value){
            return binarySearch(list, mid+1, end, value);
        }else{
            return binarySearch(list,start, mid-1, value);
        } 
        }else{
            return -1;//returns -1 if the value is not found
        }
    }
     
    private void searchByCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByCategoryButtonActionPerformed
        // TODO add your handling code here:
        if(list.isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"No items found for searching!","Message",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(searchByCategoryComboBox.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(rootPane, "Please select a category!","Error",2);
            return;
        }
        String categoryValueToSearch = 
        searchByCategoryComboBox.getSelectedItem().toString().trim();
        String breifMobileDetail = "";
        String details = "";
        int count = 0;
        for(MobileDetails mobileDetails:list){
        if(mobileDetails.getCategory().equals(categoryValueToSearch)){
        count++;
        breifMobileDetail += count+ ". The mobile name is "+mobileDetails.getName()+".\n";
        details += "The Model Number is "+mobileDetails.getModelNumber()+",\n"
        + "The Category is "+mobileDetails.getCategory()+",\n"
        + "The Mobile name is "+mobileDetails.getName()+",\n"
        + "The Processor is "+mobileDetails.getProcessor()+",\n"
        + "The Colour is "+mobileDetails.getColour()+", \n"
        + "The Memory is "+mobileDetails.getMemory()+" and\n"
        + "The Price is " +mobileDetails.getPrice() +" \n \n";
        }
        }
        if(count == 0){
            JOptionPane.showMessageDialog(rootPane,"Mobile with the "+categoryValueToSearch+" category is not found","Error",JOptionPane.ERROR_MESSAGE);
        } else if(count==1){
            JOptionPane.showMessageDialog(rootPane,"One mobile with the category "+category+" found"+"\n"+details,"Message",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            int input = JOptionPane.showConfirmDialog(rootPane,"There are "+count+" mobiles that are found: \n"
            +breifMobileDetail
            + "Do you want to view the details of the mobiles found?","MESSAGE",JOptionPane.YES_NO_OPTION, 
            JOptionPane.INFORMATION_MESSAGE);
            if(input == 0){//yes
                JOptionPane.showMessageDialog(rootPane,details,"Mobile Found",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_searchByCategoryButtonActionPerformed

    private void helpFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpFileMenuItemActionPerformed
        // TODO add your handling code here:
        try {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Users\\ASUS\\Desktop\\help.pdf"); 
         } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,e.getMessage(),"Alert",JOptionPane.WARNING_MESSAGE); 
         }
    }//GEN-LAST:event_helpFileMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:
        try{
            File file = new File("C:\\Users\\ASUS\\Desktop\\phone.txt");
            Scanner sc = new Scanner(file);
            ArrayList<MobileDetails> mobileDetails = new ArrayList<>();
            while (sc.hasNextLine()) {
                String line = sc.nextLine();
                String[] stringArray = line.split(",", 0);
                MobileDetails mobileDetail = new MobileDetails();
                  for (int i = 0; i < stringArray.length; i++) {
                        if(i==0) {
                            mobileDetail.setModelNumber(stringArray[i].trim());
                        }
                        else if(i==1) {
                            mobileDetail.setCategory(stringArray[i].trim());
                        }
                        else if(i==2) {
                            mobileDetail.setName(stringArray[i].trim());
                        }
                        else if(i==3) {
                            mobileDetail.setColour(stringArray[i].trim());
                        }
                        else if(i==4) {
                            mobileDetail.setProcessor(stringArray[i].trim());
                        }
                        else if(i==5) {
                            mobileDetail.setMemory(stringArray[i].trim());
                        }
                        else if(i==6) {
                            mobileDetail.setPrice(Integer.parseInt(stringArray[i].trim()));
                        }
                    }

                    mobileDetails.add(mobileDetail);

            }
                            addMobileFromFile(mobileDetails);

        } catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), " Invalid", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_openMenuItemActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        // TODO add your handling code here:
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure, you want to Exit Program?","EXIT",JOptionPane.YES_NO_OPTION);
        if(confirmed == JOptionPane.YES_OPTION){
            dispose();
        }
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed
    
    private void addMobileFromFile(ArrayList<MobileDetails> devices) {
        for(MobileDetails device: devices) {
            if(isDuplicateRow(device)) {
                JOptionPane.showMessageDialog(rootPane, "The mobile with the given model number already exists", " Invalid", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(device.getModelNumber().isEmpty() || device.getName().isEmpty() || device.getColour().isEmpty() || device.getCategory().isEmpty() || 
                    device.getMemory().isEmpty() || device.getProcessor().isEmpty() || device.getPrice() == 0) {
                JOptionPane.showMessageDialog(rootPane, "The mobile cannot be added since one of the parameter is missing", " Invalid", JOptionPane.ERROR_MESSAGE);
                return;
            }
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.addRow(new Object[] { device.getModelNumber(), device.getCategory(), device.getName(), device.getColour(), 
                device.getProcessor(), device.getMemory(), device.getPrice()});
            
            list.add(device);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MobileInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MobileInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MobileInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MobileInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MobileInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JComboBox<String> colourComboBox;
    private javax.swing.JLabel colourLabel;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JRadioButton eightGBRadioButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPanel formButtonPanel;
    private javax.swing.JRadioButton fourGBRadioButton;
    private javax.swing.JMenuItem helpFileMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPanel inputFormPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel memoryLabel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel mobileNameLabel;
    private javax.swing.JTextField mobileNameTextField;
    private javax.swing.JLabel modelNumberLabel;
    private javax.swing.JTextField modelNumberTextField;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JLabel processorLabel;
    private javax.swing.JTextField processorTextField;
    private javax.swing.JButton searchByCategoryButton;
    private javax.swing.JComboBox<String> searchByCategoryComboBox;
    private javax.swing.JButton searchByPriceButton;
    private javax.swing.JTextField searchByPriceTextField;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JRadioButton sixteenGBRadioButton;
    private javax.swing.JTable table;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables
}
